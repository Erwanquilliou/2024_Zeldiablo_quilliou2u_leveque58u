@startuml
class Position {
- x: int
- y: int
+ Position(int, int)
+ getX(): int
+ getY(): int
+ setX(int)
+ setY(int)
}

class CaseEffet #FFB6C1{
- effet: String
+ executerEffet(LabyJeu,Labyrinthe,String)
+ getEffet(): String
+ getCaseEffet(Labyrinthe,int,int): CaseEffet
}

Position <|-- CaseEffet

Position <|-- Entite

class Entite {
- pv: int
+ Entite(int, int, pv)
+ deplacer(Labyrinthe, String)
+ attaquer(Entite)
+ subirDegats(int)
+ getPv()
+ setPv()
}

Entite <|-- Monstre

class Monstre{
+ Monstre(int, int)
+ deplacer(Labyrinthe)
+ estProcheDePerso()
}

Entite <|-- Perso

class Perso #FFB6C1{
+ Perso(int, int)
+ etrePresent(int, int)
+ estProcheDeMonstre(Labyrinthe)
+ estSurCaseEffet(Labyrinthe): boolean
}

Monstre "*" <-- "1" Labyrinthe : -monstre
Perso "1" <-- "1" Labyrinthe : - pj
CaseEffet "*" <-- "1" Labyrinthe : - casesEffet

class Labyrinthe #FFB6C1 {
- murs: boolean[][]
+ getSuivant(int, int, String)
+ Labyrinthe(String, int)
+ ajoutMonstreLaby()
+ getMonstre()
+ deplacerPerso(String, LabyJeu)
+ actionMonstre()
+ peutSeDeplacer(int ,int): boolean
+ etreFini(): boolean
+ setPJ(Perso)
+ getLengthY(): int
+ getLength(): int
+ getMur(int, int): boolean
+ getPerso(): Perso
}

Labyrinthe "1" <--* "1" LabyJeu : - Laby

class LabyJeu{
+ LabyJeu(Labyrinthe)
+ LabyJeu(String[])
+ update(double, Clavier)
+ etreFini(): boolean
+ init()
}

LabyJeu <.. Main

class Main{
- main()
- main(String[])
}

Labyrinthe <.. Main
LabyDessin <.. Main

class LabyDessin{
- LabyDessin()
- dessinerJeu(Jeu, Canvas)
}
Sprite "1" <-- "*" LabyDessin
class Sprite #FFB6C1{
    -img_heros : Image
    -img_monstre : Image
    -img_mostre_mort : Image
    -img_mur : Image
    +setImgMur()
    +setImgHeros()
    +setImgMonstreMort()
    +getImgHeros()
    +getImgMonstre()
    +getImgMonstreMort()

}

@enduml