@startuml

class Entite {
- x: int
- y: int
- pv: int
+ Position(int, int)
+ getX(): int
+ getY(): int
+ setX(int)
+ setY(int)
+ deplacer(Labyrinthe, String)
+ attaquer(Entite)
+ subirDegats(int)
}

Entite <|-- Monstre

class Monstre{
+ Monstre(int, int)
+ deplacer(Labyrinthe)
+ estProcheDePerso()
}

Entite <|-- Perso

class Perso{
+ Perso(int, int)
+ etrePresent (int, int)
}

Monstre "*" <-- "1" Labyrinthe : -monstre
Perso "1" <-- "1" Labyrinthe : - pj

class Labyrinthe {
- pj: perso
- monstre: List<Monstre>
- murs: boolean[][]
+ getSuivant(int, int, String)
+ Labyrinthe(String, int)
+ ajoutMonstreLaby()
+ getMonstre()
+ deplacerPerso(String, LabyJeu)
+ actionMonstre()
+ peutSeDeplacer(int ,int): boolean
+ etreFini(): boolean
+ setPJ(Perso)
+ getLengthY(): int
+ getLength(): int
+ getMur(int, int): boolean
+ getPerso(): Perso
+ getNbMonstre(): int
}

Labyrinthe "1" <--* "1" LabyJeu : - Laby

class LabyJeu{
+ LabyJeu(Labyrinthe)
+ update(double, Clavier)
+ etreFini(): boolean
+ init()
}

LabyJeu <.. Main

class Main{
- main()
- main(String[])
}

Labyrinthe <.. Main
LabyDessin <.. Main

class LabyDessin{
- LabyDessin()
- dessinerJeu(Jeu, Canvas)
}

@enduml